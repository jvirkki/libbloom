From ccbc1b53528b5992582806506c3e06824d8e9879 Mon Sep 17 00:00:00 2001
From: m0nkeyc0der <noface@inbox.ru>
Date: Sun, 6 Sep 2015 14:10:08 +0300
Subject: [PATCH] Extract function refactoring in bloom_check_add()

---
 bloom.c | 33 +++++++++++++++++++--------------
 1 file changed, 19 insertions(+), 14 deletions(-)

diff --git a/bloom.c b/bloom.c
index a433770..ec5b761 100644
--- a/bloom.c
+++ b/bloom.c
@@ -22,6 +22,23 @@
 #include "murmurhash2.h"
 
 
+static int test_bit_set_bit(unsigned char * bf, unsigned int x, int set_bit)
+{
+    unsigned int byte = x >> 3;
+    unsigned char c = bf[byte];        // expensive memory access
+    unsigned int mask = 1 << (x % 8);
+
+    if (c & mask)
+        return 1;
+    else
+    {
+        if (set_bit)
+            bf[byte] = c | mask;
+        return 0;
+    }
+}
+
+
 static int bloom_check_add(struct bloom * bloom,
                            const void * buffer, int len, int add)
 {
@@ -35,23 +52,11 @@ static int bloom_check_add(struct bloom * bloom,
   register unsigned int b = murmurhash2(buffer, len, a);
   register unsigned int x;
   register unsigned int i;
-  register unsigned int byte;
-  register unsigned int mask;
-  register unsigned char c;
 
   for (i = 0; i < bloom->hashes; i++) {
     x = (a + i*b) % bloom->bits;
-    byte = x >> 3;
-    c = bloom->bf[byte];        // expensive memory access
-    mask = 1 << (x % 8);
-
-    if (c & mask) {
-      hits++;
-    } else {
-      if (add) {
-        bloom->bf[byte] = c | mask;
-      }
-    }
+    if (test_bit_set_bit(bloom->bf, x, add))
+        hits++;
   }
 
   if (hits == bloom->hashes) {
-- 
2.1.4

